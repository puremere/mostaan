<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>